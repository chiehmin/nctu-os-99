getrusage stores the infomation in a structure:

struct rusage {
	struct timeval ru_utime; /* user time used */
	struct timeval ru_stime; /* system time used */
	long   ru_maxrss;        /* maximum resident set size */
	long   ru_ixrss;         /* integral shared memory size */
	long   ru_idrss;         /* integral unshared data size */
	long   ru_isrss;         /* integral unshared stack size */
	long   ru_minflt;        /* page reclaims */
	long   ru_majflt;        /* page faults */
	long   ru_nswap;         /* swaps */
	long   ru_inblock;       /* block input operations */
	long   ru_oublock;       /* block output operations */
	long   ru_msgsnd;        /* messages sent */
	long   ru_msgrcv;        /* messages received */
	long   ru_nsignals;      /* signals received */
	long   ru_nvcsw;         /* voluntary context switches */
	long   ru_nivcsw;        /* involuntary context switches */
};

But not all fields are meaningful under Linux.
In Linux 2.4 only the fields ru_utime, ru_stime, ru_minflt, and ru_majflt are maintained.
Since Linux  2.6,  ru_nvcsw  and  ru_nivcsw are also maintained.
Since Linux 2.6.22, ru_inblock and ru_oublock are also maintained.

That is, in Linux 2.6.22, the following fields are still not implemented:
long   ru_maxrss;        /* maximum resident set size */
long   ru_ixrss;         /* integral shared memory size */
long   ru_idrss;         /* integral unshared data size */
long   ru_isrss;         /* integral unshared stack size */
long   ru_nswap;         /* swaps */
long   ru_msgsnd;        /* messages sent */
long   ru_msgrcv;        /* messages received */
long   ru_nsignals;      /* signals received */



Therefore, we cannot get the memory usage from getrusage.
However, the process memory infomation is stored in /proc/[PID]/statm (see man proc).
//////////////////////////////////////////////////////////////////////////////
       /proc/[pid]/statm
              Provides information about memory  usage,  measured  in  pages.
              The columns are:

                  size       total program size
                             (same as VmSize in /proc/[pid]/status)
                  resident   resident set size
                             (same as VmRSS in /proc/[pid]/status)
                  share      shared pages (from shared mappings)
                  text       text (code)
                  lib        library (unused in Linux 2.6)
                  data       data + stack
                  dt         dirty pages (unused in Linux 2.6)
//////////////////////////////////////////////////////////////////////////////
Therefore, we can get the memory usage simply by reading /proc/[PID]/statm.

To get the maximum memory usage, we can use ptrace to step through the program.

See the sample program: maxmem.c

The usage is:
maxmem *FILENAME*
*FILENAME* : the filename of the program to be tested

For i/o redirection, simply use it with maxmem:
maxmem *FILENAME* < *FILE.IN* > *FILE.OUT*




2010.09.19 Shaform
